{"ast":null,"code":"var _jsxFileName = \"/home/edgar/Escritorio/Edgar Montenegro/Proyectos/ProyectosTerminados/CV/MyCurriculumVitae/src/Components/ListItemContainer/ListItemContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ItemList from '../ItemList/ItemList';\nimport Logo from '../../Images/sunnyCloud.png';\nimport Logo2 from '../../Images/healthier.png';\nimport gifClimApp from '../../Images/gifClimApp.gif';\nimport gifHealthier from '../../Images/gifHealthier.gif';\nimport MockUp from '../MockUp/MockUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getItems = () => {\n  return new Promise((res, rej) => {\n    res({\n      MockUp\n    }); //rej('No hay cursos disponibles!')\n  });\n};\n\nexport default function ListItemContainer() {\n  _s();\n\n  const [item, setItem] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getItems().then(items => {\n      setItem(items);\n    }, err => {\n      setError(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'whitesmoke'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListItemContainer, \"ozbBoJLeY7S7gYOE9jf7TBhuQdA=\");\n\n_c = ListItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItemContainer\");","map":{"version":3,"sources":["/home/edgar/Escritorio/Edgar Montenegro/Proyectos/ProyectosTerminados/CV/MyCurriculumVitae/src/Components/ListItemContainer/ListItemContainer.js"],"names":["React","useState","useEffect","ItemList","Logo","Logo2","gifClimApp","gifHealthier","MockUp","getItems","Promise","res","rej","ListItemContainer","item","setItem","error","setError","then","items","err","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BD,IAAAA,GAAG,CAAC;AAACH,MAAAA;AAAD,KAAD,CAAH,CAD+B,CAE7B;AACH,GAHM,CAAP;AAID,CALD;;AAOA,eAAe,SAASK,iBAAT,GAA4B;AAAA;;AACzC,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAK,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAjC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,GAAGS,IAAX,CAAgBC,KAAK,IAAI;AACvBJ,MAAAA,OAAO,CAACI,KAAD,CAAP;AACD,KAFD,EAGAC,GAAG,IAAI;AACLH,MAAAA,QAAQ,CAACG,GAAD,CAAR;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBAAO;AAAA,eACEJ,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAI;AAACK,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA,gBAAoCL;AAApC;AAAA;AAAA;AAAA;AAAA,YADX,eAEC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBAAP;AAID;;GAhBuBD,iB;;KAAAA,iB","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ItemList from '../ItemList/ItemList'\nimport Logo from '../../Images/sunnyCloud.png'\nimport Logo2 from '../../Images/healthier.png'\nimport gifClimApp from '../../Images/gifClimApp.gif'\nimport gifHealthier from '../../Images/gifHealthier.gif'\nimport MockUp from '../MockUp/MockUp'\n\nconst getItems = () => {\n  return new Promise((res, rej) => {\n    res({MockUp})\n      //rej('No hay cursos disponibles!')\n  })\n}\n\nexport default function ListItemContainer(){\n  const[item, setItem] = useState([])\n  const[error, setError] = useState(null)\n  useEffect(() => {\n    getItems().then(items => {\n      setItem(items)\n    },\n    err => {\n      setError(err)\n    })\n  }, [])\n\n  return <>\n          {error && <p style = {{color: 'whitesmoke'}}>{error}</p>}\n          <ItemList items = {item}/>\n         </>\n}\n"]},"metadata":{},"sourceType":"module"}